module multiplicacion
  #(parameter M = 4)
  (
    input logic signed [M-1:0] A,
    input logic signed [M-1:0] B,
    output logic signed [2*M-1:0] R,
    output logic C,
    output logic N,
    output logic V,
    output logic Z
  );

  logic signed [2*M-1:0] temp_R;

  integer i;

  always_comb begin
    temp_R = 0;
    for (i = 0; i < M; i++) begin
      if (B[i] == 1'b1) begin
        temp_R = temp_R + (A << i);
      end
    end
    R = temp_R;

    // Indicador de cero
    Z = (R == 0);

    // Indicador de signo (bit más significativo)
    N = R[2*M-1];

    // Desbordamiento aritmético
    V = (A[M-1] ^ B[M-1]) ^ N;

    // Acarreo (en este caso, no se está manejando un acarreo estándar, podría no ser relevante)
    C = 1'b0;
  end

endmodule
