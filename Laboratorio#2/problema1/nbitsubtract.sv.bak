module nbitsubstract #(parameter n = 4)
(input logic [n - 1: 0]a, b, output logic [n - 1: 0]y, output logic bout);
	
	logic [N:0] borrow; 
	assign borrow[0] = 1'b0;
	
	genvar i;
	generate
		for (i = 0; i < n; i = i + 1) begin : subs_loop
			fullsubstract subs_inst (
            .a(a[i]),
            .b(b[i]),
            .Cin(borrow[i]),
            .y(y[i]),
            .Cout(borrow[i+1]));
    end
	endgenerate
endmodule