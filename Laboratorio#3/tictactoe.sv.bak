module tictactoe(
    input logic clk,
    input logic reset,
    input logic select,
	 input logic move,
	 input logic attack,
    input logic orden,
    input logic cant_player,
    output logic [1:0] board [3:1][3:1],
    output logic [1:0] winner             
);

    logic update_board, check_winner;
    logic [1:0] current_player;

    fsm fsm_co( .clk(clk), 
					 .rst(rst), 
					 .select(select),
					 .orden(orden),
					 .cant_player(cant_player),
					 .turno(),
					 .end_attack_p1(),
					 .end_attack_p2(),
					 .timeout(),
					 .gameover(winner != 0),
					 .en_attack_p1(),
					 .en_attack_p2(),
					 .en_attack_random(),
					 .en_check() );
    

    tictactoe_board board_module(
        .clk(clk),
        .reset(reset),
        .update_board(update_board),
        .current_player(current_player),
        .row((current_player == 1) ? player1_row : player2_row),
        .col((current_player == 1) ? player1_col : player2_col),
        .board(board),
        .valid_move(valid_move)
    );

    check_winner_module winner_module(
        .board(board),
        .winner(winner)
    );

endmodule
