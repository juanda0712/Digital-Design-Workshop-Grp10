--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=30 LPM_WIDTH=5 data eq
--VERSION_BEGIN 22.1 cbx_cycloneii 2022:10:25:15:36:38:SC cbx_lpm_add_sub 2022:10:25:15:36:38:SC cbx_lpm_compare 2022:10:25:15:36:38:SC cbx_lpm_decode 2022:10:25:15:36:36:SC cbx_mgl 2022:10:25:15:36:55:SC cbx_nadder 2022:10:25:15:36:38:SC cbx_stratix 2022:10:25:15:36:38:SC cbx_stratixii 2022:10:25:15:36:38:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_j2a
( 
	data[4..0]	:	input;
	eq[29..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[29..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3531w[2..0]	: WIRE;
	w_anode3545w[3..0]	: WIRE;
	w_anode3562w[3..0]	: WIRE;
	w_anode3572w[3..0]	: WIRE;
	w_anode3582w[3..0]	: WIRE;
	w_anode3592w[3..0]	: WIRE;
	w_anode3602w[3..0]	: WIRE;
	w_anode3612w[3..0]	: WIRE;
	w_anode3622w[3..0]	: WIRE;
	w_anode3634w[2..0]	: WIRE;
	w_anode3644w[3..0]	: WIRE;
	w_anode3655w[3..0]	: WIRE;
	w_anode3665w[3..0]	: WIRE;
	w_anode3675w[3..0]	: WIRE;
	w_anode3685w[3..0]	: WIRE;
	w_anode3695w[3..0]	: WIRE;
	w_anode3705w[3..0]	: WIRE;
	w_anode3715w[3..0]	: WIRE;
	w_anode3726w[2..0]	: WIRE;
	w_anode3736w[3..0]	: WIRE;
	w_anode3747w[3..0]	: WIRE;
	w_anode3757w[3..0]	: WIRE;
	w_anode3767w[3..0]	: WIRE;
	w_anode3777w[3..0]	: WIRE;
	w_anode3787w[3..0]	: WIRE;
	w_anode3797w[3..0]	: WIRE;
	w_anode3807w[3..0]	: WIRE;
	w_anode3818w[2..0]	: WIRE;
	w_anode3828w[3..0]	: WIRE;
	w_anode3839w[3..0]	: WIRE;
	w_anode3849w[3..0]	: WIRE;
	w_anode3859w[3..0]	: WIRE;
	w_anode3869w[3..0]	: WIRE;
	w_anode3879w[3..0]	: WIRE;
	w_anode3889w[3..0]	: WIRE;
	w_anode3899w[3..0]	: WIRE;
	w_data3529w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[29..0] = eq_wire[29..0];
	eq_wire[] = ( ( w_anode3899w[3..3], w_anode3889w[3..3], w_anode3879w[3..3], w_anode3869w[3..3], w_anode3859w[3..3], w_anode3849w[3..3], w_anode3839w[3..3], w_anode3828w[3..3]), ( w_anode3807w[3..3], w_anode3797w[3..3], w_anode3787w[3..3], w_anode3777w[3..3], w_anode3767w[3..3], w_anode3757w[3..3], w_anode3747w[3..3], w_anode3736w[3..3]), ( w_anode3715w[3..3], w_anode3705w[3..3], w_anode3695w[3..3], w_anode3685w[3..3], w_anode3675w[3..3], w_anode3665w[3..3], w_anode3655w[3..3], w_anode3644w[3..3]), ( w_anode3622w[3..3], w_anode3612w[3..3], w_anode3602w[3..3], w_anode3592w[3..3], w_anode3582w[3..3], w_anode3572w[3..3], w_anode3562w[3..3], w_anode3545w[3..3]));
	w_anode3531w[] = ( (w_anode3531w[1..1] & (! data_wire[4..4])), (w_anode3531w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3545w[] = ( (w_anode3545w[2..2] & (! w_data3529w[2..2])), (w_anode3545w[1..1] & (! w_data3529w[1..1])), (w_anode3545w[0..0] & (! w_data3529w[0..0])), w_anode3531w[2..2]);
	w_anode3562w[] = ( (w_anode3562w[2..2] & (! w_data3529w[2..2])), (w_anode3562w[1..1] & (! w_data3529w[1..1])), (w_anode3562w[0..0] & w_data3529w[0..0]), w_anode3531w[2..2]);
	w_anode3572w[] = ( (w_anode3572w[2..2] & (! w_data3529w[2..2])), (w_anode3572w[1..1] & w_data3529w[1..1]), (w_anode3572w[0..0] & (! w_data3529w[0..0])), w_anode3531w[2..2]);
	w_anode3582w[] = ( (w_anode3582w[2..2] & (! w_data3529w[2..2])), (w_anode3582w[1..1] & w_data3529w[1..1]), (w_anode3582w[0..0] & w_data3529w[0..0]), w_anode3531w[2..2]);
	w_anode3592w[] = ( (w_anode3592w[2..2] & w_data3529w[2..2]), (w_anode3592w[1..1] & (! w_data3529w[1..1])), (w_anode3592w[0..0] & (! w_data3529w[0..0])), w_anode3531w[2..2]);
	w_anode3602w[] = ( (w_anode3602w[2..2] & w_data3529w[2..2]), (w_anode3602w[1..1] & (! w_data3529w[1..1])), (w_anode3602w[0..0] & w_data3529w[0..0]), w_anode3531w[2..2]);
	w_anode3612w[] = ( (w_anode3612w[2..2] & w_data3529w[2..2]), (w_anode3612w[1..1] & w_data3529w[1..1]), (w_anode3612w[0..0] & (! w_data3529w[0..0])), w_anode3531w[2..2]);
	w_anode3622w[] = ( (w_anode3622w[2..2] & w_data3529w[2..2]), (w_anode3622w[1..1] & w_data3529w[1..1]), (w_anode3622w[0..0] & w_data3529w[0..0]), w_anode3531w[2..2]);
	w_anode3634w[] = ( (w_anode3634w[1..1] & (! data_wire[4..4])), (w_anode3634w[0..0] & data_wire[3..3]), B"1");
	w_anode3644w[] = ( (w_anode3644w[2..2] & (! w_data3529w[2..2])), (w_anode3644w[1..1] & (! w_data3529w[1..1])), (w_anode3644w[0..0] & (! w_data3529w[0..0])), w_anode3634w[2..2]);
	w_anode3655w[] = ( (w_anode3655w[2..2] & (! w_data3529w[2..2])), (w_anode3655w[1..1] & (! w_data3529w[1..1])), (w_anode3655w[0..0] & w_data3529w[0..0]), w_anode3634w[2..2]);
	w_anode3665w[] = ( (w_anode3665w[2..2] & (! w_data3529w[2..2])), (w_anode3665w[1..1] & w_data3529w[1..1]), (w_anode3665w[0..0] & (! w_data3529w[0..0])), w_anode3634w[2..2]);
	w_anode3675w[] = ( (w_anode3675w[2..2] & (! w_data3529w[2..2])), (w_anode3675w[1..1] & w_data3529w[1..1]), (w_anode3675w[0..0] & w_data3529w[0..0]), w_anode3634w[2..2]);
	w_anode3685w[] = ( (w_anode3685w[2..2] & w_data3529w[2..2]), (w_anode3685w[1..1] & (! w_data3529w[1..1])), (w_anode3685w[0..0] & (! w_data3529w[0..0])), w_anode3634w[2..2]);
	w_anode3695w[] = ( (w_anode3695w[2..2] & w_data3529w[2..2]), (w_anode3695w[1..1] & (! w_data3529w[1..1])), (w_anode3695w[0..0] & w_data3529w[0..0]), w_anode3634w[2..2]);
	w_anode3705w[] = ( (w_anode3705w[2..2] & w_data3529w[2..2]), (w_anode3705w[1..1] & w_data3529w[1..1]), (w_anode3705w[0..0] & (! w_data3529w[0..0])), w_anode3634w[2..2]);
	w_anode3715w[] = ( (w_anode3715w[2..2] & w_data3529w[2..2]), (w_anode3715w[1..1] & w_data3529w[1..1]), (w_anode3715w[0..0] & w_data3529w[0..0]), w_anode3634w[2..2]);
	w_anode3726w[] = ( (w_anode3726w[1..1] & data_wire[4..4]), (w_anode3726w[0..0] & (! data_wire[3..3])), B"1");
	w_anode3736w[] = ( (w_anode3736w[2..2] & (! w_data3529w[2..2])), (w_anode3736w[1..1] & (! w_data3529w[1..1])), (w_anode3736w[0..0] & (! w_data3529w[0..0])), w_anode3726w[2..2]);
	w_anode3747w[] = ( (w_anode3747w[2..2] & (! w_data3529w[2..2])), (w_anode3747w[1..1] & (! w_data3529w[1..1])), (w_anode3747w[0..0] & w_data3529w[0..0]), w_anode3726w[2..2]);
	w_anode3757w[] = ( (w_anode3757w[2..2] & (! w_data3529w[2..2])), (w_anode3757w[1..1] & w_data3529w[1..1]), (w_anode3757w[0..0] & (! w_data3529w[0..0])), w_anode3726w[2..2]);
	w_anode3767w[] = ( (w_anode3767w[2..2] & (! w_data3529w[2..2])), (w_anode3767w[1..1] & w_data3529w[1..1]), (w_anode3767w[0..0] & w_data3529w[0..0]), w_anode3726w[2..2]);
	w_anode3777w[] = ( (w_anode3777w[2..2] & w_data3529w[2..2]), (w_anode3777w[1..1] & (! w_data3529w[1..1])), (w_anode3777w[0..0] & (! w_data3529w[0..0])), w_anode3726w[2..2]);
	w_anode3787w[] = ( (w_anode3787w[2..2] & w_data3529w[2..2]), (w_anode3787w[1..1] & (! w_data3529w[1..1])), (w_anode3787w[0..0] & w_data3529w[0..0]), w_anode3726w[2..2]);
	w_anode3797w[] = ( (w_anode3797w[2..2] & w_data3529w[2..2]), (w_anode3797w[1..1] & w_data3529w[1..1]), (w_anode3797w[0..0] & (! w_data3529w[0..0])), w_anode3726w[2..2]);
	w_anode3807w[] = ( (w_anode3807w[2..2] & w_data3529w[2..2]), (w_anode3807w[1..1] & w_data3529w[1..1]), (w_anode3807w[0..0] & w_data3529w[0..0]), w_anode3726w[2..2]);
	w_anode3818w[] = ( (w_anode3818w[1..1] & data_wire[4..4]), (w_anode3818w[0..0] & data_wire[3..3]), B"1");
	w_anode3828w[] = ( (w_anode3828w[2..2] & (! w_data3529w[2..2])), (w_anode3828w[1..1] & (! w_data3529w[1..1])), (w_anode3828w[0..0] & (! w_data3529w[0..0])), w_anode3818w[2..2]);
	w_anode3839w[] = ( (w_anode3839w[2..2] & (! w_data3529w[2..2])), (w_anode3839w[1..1] & (! w_data3529w[1..1])), (w_anode3839w[0..0] & w_data3529w[0..0]), w_anode3818w[2..2]);
	w_anode3849w[] = ( (w_anode3849w[2..2] & (! w_data3529w[2..2])), (w_anode3849w[1..1] & w_data3529w[1..1]), (w_anode3849w[0..0] & (! w_data3529w[0..0])), w_anode3818w[2..2]);
	w_anode3859w[] = ( (w_anode3859w[2..2] & (! w_data3529w[2..2])), (w_anode3859w[1..1] & w_data3529w[1..1]), (w_anode3859w[0..0] & w_data3529w[0..0]), w_anode3818w[2..2]);
	w_anode3869w[] = ( (w_anode3869w[2..2] & w_data3529w[2..2]), (w_anode3869w[1..1] & (! w_data3529w[1..1])), (w_anode3869w[0..0] & (! w_data3529w[0..0])), w_anode3818w[2..2]);
	w_anode3879w[] = ( (w_anode3879w[2..2] & w_data3529w[2..2]), (w_anode3879w[1..1] & (! w_data3529w[1..1])), (w_anode3879w[0..0] & w_data3529w[0..0]), w_anode3818w[2..2]);
	w_anode3889w[] = ( (w_anode3889w[2..2] & w_data3529w[2..2]), (w_anode3889w[1..1] & w_data3529w[1..1]), (w_anode3889w[0..0] & (! w_data3529w[0..0])), w_anode3818w[2..2]);
	w_anode3899w[] = ( (w_anode3899w[2..2] & w_data3529w[2..2]), (w_anode3899w[1..1] & w_data3529w[1..1]), (w_anode3899w[0..0] & w_data3529w[0..0]), w_anode3818w[2..2]);
	w_data3529w[2..0] = data_wire[2..0];
END;
--VALID FILE
